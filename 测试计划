1、业务层面梳理，记录设计文档（confluence记录）
2、代码仓库采用git管理，方便进行代码审查（gogs管理）；
3、对于核心业务准备单元测试，保持核心业务的稳定以及业务解耦，积累单元测试用例（需要做成报表）；
4、项目采用敏捷开发，进行快速迭代，采用持续集成工具来集中打包编译、集中部署(需要理清部署模式、配置项);
5、记录接口文档，做接口、压力测试，记录文档、分析文档（需要做成报表）；
6、功能测试编写测试用例，后期编写成自动化用例，安装jacoo（java覆盖率工具）统计代码覆盖率，保证测试用例的代码覆盖率（需要做成报表）
7、Checkstyle通过检查对代码编码格式，命名约定，Javadoc，类设计等方面进行代码规范和风格的检查，从而有效约束开发人员更好地遵循代码编写规范；
8、web安全漏洞扫描工具web inspect（需要安装破解版）进行漏洞扫描
9、专门的漏洞扫描系统kail linux，请参考官方使用文档
10、app性能、安全测试，请查找测试工具，完成测试方案设计和测试数据
11、考察其他开源框架，实现技术积累
12、对于新架构平台的高可用、负载均衡、数据库测试，准备测试方案以及测试数据
http://netsecurity.51cto.com/art/201709/552650.htm
13、代码质量管理工具Sonar，请参考https://www.ibm.com/developerworks/cn/java/j-lo-sonar/
14、代码审查工具Review Board
15、jacoo和sonar来安装配置 请参考http://www.51testing.com/html/50/253150-848196.html
16、sonar介绍 请参考http://www.uml.org.cn/jchgj/201307251.asp
